%spark
val c=b.map(f=>((f._2,f._1._1,f._1._2)))
val d=b.map(f=>f._1._2.map(g=>(f._2,f._1._1,g._1,g._2)).toList)
import com.vividsolutions.jts.geom.{ Coordinate, Envelope, GeometryFactory, Point }
val geometryFactory = new GeometryFactory()
val dbparam=d.collect.map(f => f.map{g =>
    val clsuterid=g._1+"."
    val poid=g._4
    val combineId=clsuterid+poid
    val lat=g._3.latitude
    val long=g._3.longitude
    val point = geometryFactory.createPoint(new Coordinate(long, lat))
        point.setUserData(combineId)
        point
    })
dbparam.take(3).foreach(println)

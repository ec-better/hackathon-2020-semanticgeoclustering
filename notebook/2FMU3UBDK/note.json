{
  "paragraphs": [
    {
      "text": "%python\nimport json\nimport os\n\nprefix \u003d \"http://slipo.eu/id/poi\"\nrdftype \u003d \"\u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e\"\npoi \u003d \"\u003chttp://slipo.eu/def#POI\u003e\"\ncategory \u003d \"\u003chttp://slipo.eu/def#category\u003e\"\ntermPrefix \u003d \"http://slipo.eu/id/term\"\ntermValue \u003d \"\u003chttp://slipo.eu/def#termValue\u003e\"\nrdf \u003d \"\"\ni \u003d 0\nhasGeometry \u003d \"\u003chttp://www.opengis.net/ont/geosparql#hasGeometry\u003e\"\ngeometryID \u003d \"\u003chttp://slipo.eu/id/poi/__id__/geometry\u003e\"\nwkt \u003d \"\u003chttp://www.opengis.net/ont/geosparql#asWKT\u003e\"\nepsg \u003d \"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e\"\nwktLiteral \u003d \"\u003chttp://www.opengis.net/ont/geosparql#wktLiteral\u003e\"\ninput \u003d \u0027../sansa-examples/data//EnglishFloodTweets__.txt\u0027\n\n\nwith open(input) as json_file:# dummy_tweet.json\n    data \u003d json.load(json_file)\n    temp \u003d 0\n    for p in data[\u0027tweets\u0027]:\n        print(p[\u0027id\u0027])\n        \n        temp \u003d temp+1\n        point_id \u003d p[\u0027id\u0027]\n        concepts \u003d p[\u0027image_concepts\u0027]\n\n        if concepts !\u003d \"n/a\":\n            subject \u003d \"\u003c\" + prefix + \"/\" + point_id + \"\u003e\"            \n            triple \u003d subject + \" \" + rdftype + \" \" + poi + \" . \"\n            rdf +\u003d triple + \"\\n\"\n\n            conceptsArray \u003d concepts.split()\n            for cat in conceptsArray:   \n                term \u003d (\"\u003c\" + termPrefix + \"/%s\u003e\" % i)             \n                triple2category \u003d subject + \" \" + category + \" \" + term + \" .\\n\"                \n                categoryTerm \u003d subject + \" \" + termValue + \" \\\"\" + cat + \"\\\" .\\n\"\n                rdf +\u003d triple2category + categoryTerm\n                i \u003d i+1\n            \n            locations \u003d p[\u0027estimated_locations\u0027]\n            geometry \u003d locations[0][\u0027geometry\u0027]\n            coordinates \u003d geometry[\u0027coordinates\u0027]\n            lat \u003d coordinates[0]\n            long \u003d coordinates[1]\n\n            geometryObject \u003d geometryID.replace(\"__id__\", point_id)\n\n            geo \u003d subject + \" \" + hasGeometry + \" \" + geometryObject + \" .\"\n            geoPoint \u003d ((geometryObject + \" \" + wkt + \" \\\"\" + epsg + \" POINT(%f %f)\\\"^^\" + wktLiteral + \" .\") % (lat, long))\n\n\n            rdf +\u003d geo + \"\\n\" + geoPoint + \"\\n\"\n\n            # print(rdf)\n\n                \n\n    # print(rdf)\n\n    output_file \u003d open(\u0027../sansa-examples/data/EOPEN_POIs_100.nt\u0027, \u0027w+\u0027) # append mode\n    output_file.write(rdf)\n    output_file.close()\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:43:05.840",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "1306905212108656641\n1306905122056867840\n1306903836288720896\n1306903186494623747\n1306902128451923968\n1306901715468324864\n1306901422190006272\n1306894528239017985\n1306892572388929541\n1306891928529563648\n1306891668990431235\n1306891599503335425\n1306891433341865985\n1306891291540807682\n1306890923268288513\n1306890582397251584\n1306890127986307072\n1306888192398970886\n1306886861999214592\n1306886184719638528\n1306885699128492033\n1306885563216261120\n1306883169057153024\n1306882284776304641\n1306882001723633664\n1306881857364127744\n1306880692027039744\n1306880147367305217\n1306879757846540288\n1306879375846125569\n1306878195602542593\n1306875836356874243\n1306874821771489283\n1306871339345752067\n1306864521936596994\n1306862831518846976\n1306862805082091520\n1306860116235284480\n1306860053920505857\n1305795071216771072\n1305795069161635840\n1305795055073013760\n1305794928086323200\n1305794796477468674\n1305794537890209797\n1305794521536573441\n1305793481353211907\n1305792991290945536\n1305791548676857856\n1305790519923142657\n1305788814829461504\n1305788485299826689\n1305787124684328960\n1305786888410849280\n1305785259934593025\n1305784183785009152\n1305783418383486978\n1305778356181368832\n1305776935688167424\n1305775995564306432\n1305775558853357568\n1305770916912271361\n1305770203016556544\n1305766496350633984\n1305766109832835077\n1305764678400794624\n1305762579516596224\n1305761256029204480\n1305760580209455106\n1305759386128781312\n1305758252563664897\n1305757104117108736\n1305755773537054721\n1305753784501428225\n1305747394240434177\n1305742400858583042\n1305740995032563712\n1305740022847422464\n1305736952604311552\n1305736301564502017\n1305734617182416896\n1305733117383069701\n1305732318141710336\n1305732315771858945\n1305730073656545280\n1305729334217334784\n1305728156431679488\n1305724938163286016\n1305724349312364544\n1305721151201525760\n1305721000231727111\n1305718267831435265\n1305718184805187584\n1305717955947360256\n1305715467571679233\n1305715206992035843\n1305714614278270976\n1305714517863788545\n1305713953889112065\n1305711914425614337\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1602766382954_-1726739538",
      "id": "20201002-093213_1749750785",
      "dateCreated": "2020-10-15 12:53:02.954",
      "dateStarted": "2020-10-15 14:43:05.892",
      "dateFinished": "2020-10-15 14:43:06.110",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n%sh\nhead ../sansa-examples/data/EOPEN_POIs_100.nt -n 100",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:43:06.182",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://slipo.eu/def#POI\u003e . \n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/0\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/1\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Scene_Text\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/2\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Charts\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/3\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Overlaid_Text\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/4\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text_On_Artificial_Background\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/5\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Computer_Or_Television_Screens\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/6\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Graphic\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/7\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Professional_Video\" .\n\u003chttp://slipo.eu/id/poi/1306905212108656641\u003e \u003chttp://www.opengis.net/ont/geosparql#hasGeometry\u003e \u003chttp://slipo.eu/id/poi/1306905212108656641/geometry\u003e .\n\u003chttp://slipo.eu/id/poi/1306905212108656641/geometry\u003e \u003chttp://www.opengis.net/ont/geosparql#asWKT\u003e \"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e POINT(71.748324 33.973913)\"^^\u003chttp://www.opengis.net/ont/geosparql#wktLiteral\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://slipo.eu/def#POI\u003e . \n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/8\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/9\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Scene_Text\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/10\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Charts\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/11\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Overlaid_Text\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/12\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text_On_Artificial_Background\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/13\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Computer_Or_Television_Screens\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/14\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Graphic\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/15\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Professional_Video\" .\n\u003chttp://slipo.eu/id/poi/1306905122056867840\u003e \u003chttp://www.opengis.net/ont/geosparql#hasGeometry\u003e \u003chttp://slipo.eu/id/poi/1306905122056867840/geometry\u003e .\n\u003chttp://slipo.eu/id/poi/1306905122056867840/geometry\u003e \u003chttp://www.opengis.net/ont/geosparql#asWKT\u003e \"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e POINT(71.748324 33.973913)\"^^\u003chttp://www.opengis.net/ont/geosparql#wktLiteral\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://slipo.eu/def#POI\u003e . \n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/16\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Computer_Or_Television_Screens\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/17\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Scene_Text\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/18\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/19\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Charts\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/20\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Graphic\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/21\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Overlaid_Text\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/22\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Computers\" .\n\u003chttp://slipo.eu/id/poi/1306903836288720896\u003e \u003chttp://www.opengis.net/ont/geosparql#hasGeometry\u003e \u003chttp://slipo.eu/id/poi/1306903836288720896/geometry\u003e .\n\u003chttp://slipo.eu/id/poi/1306903836288720896/geometry\u003e \u003chttp://www.opengis.net/ont/geosparql#asWKT\u003e \"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e POINT(-98.629055 29.513344)\"^^\u003chttp://www.opengis.net/ont/geosparql#wktLiteral\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://slipo.eu/def#POI\u003e . \n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/23\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Maps\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/24\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Graphic\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/25\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Synthetic_Images\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/26\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/27\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Animation_Cartoon\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/28\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Junk_Frame\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/29\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Charts\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/30\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Outdoor\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/31\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Overlaid_Text\" .\n\u003chttp://slipo.eu/id/poi/1306903186494623747\u003e \u003chttp://www.opengis.net/ont/geosparql#hasGeometry\u003e \u003chttp://slipo.eu/id/poi/1306903186494623747/geometry\u003e .\n\u003chttp://slipo.eu/id/poi/1306903186494623747/geometry\u003e \u003chttp://www.opengis.net/ont/geosparql#asWKT\u003e \"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e POINT(-89.536321 24.487030)\"^^\u003chttp://www.opengis.net/ont/geosparql#wktLiteral\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://slipo.eu/def#POI\u003e . \n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/32\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/33\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Overlaid_Text\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/34\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Text_On_Artificial_Background\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/35\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Graphic\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/36\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Synthetic_Images\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/37\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Commercial_Advertisement\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/38\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Network_Logo\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/39\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Computer_Or_Television_Screens\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/40\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Background_Static\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#category\u003e \u003chttp://slipo.eu/id/term/41\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://slipo.eu/def#termValue\u003e \"Animation_Cartoon\" .\n\u003chttp://slipo.eu/id/poi/1306902128451923968\u003e \u003chttp://www.opengis.net/ont/geosparql#hasGeometry\u003e \u003chttp://slipo.eu/id/poi/1306902128451923968/geometry\u003e .\n\u003chttp://slipo.eu/id/poi/1306902128451923968/geometry\u003e \u003chttp://www.opengis.net/ont/geosparql#asWKT\u003e \"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e POINT(0.385394 41.009257)\"^^\u003chttp://www.opengis.net/ont/geosparql#wktLiteral\u003e .\n\u003chttp://slipo.eu/id/poi/1306901715468324864\u003e \u003chttp://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://slipo.eu/def#POI\u003e . \n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1602766382958_-499742139",
      "id": "20201002-093645_366596198",
      "dateCreated": "2020-10-15 12:53:02.958",
      "dateStarted": "2020-10-15 14:43:06.241",
      "dateFinished": "2020-10-15 14:43:06.314",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhadoop fs -rm  /data/EOPEN_POIs_100.nt\nhadoop fs -put ../sansa-examples/data/EOPEN_POIs_100.nt  /data/",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:43:06.344",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Deleted /data/EOPEN_POIs_100.nt\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1602766382959_14156429",
      "id": "20201002-124735_935381712",
      "dateCreated": "2020-10-15 12:53:02.959",
      "dateStarted": "2020-10-15 14:43:06.501",
      "dateFinished": "2020-10-15 14:43:10.504",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh\nhdfs dfs -ls /data",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:43:10.603",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Found 3 items\n-rw-r--r--   3 root supergroup       6148 2020-10-15 12:44 /data/.DS_Store\n-rw-r--r--   3 root supergroup     234432 2020-10-15 14:43 /data/EOPEN_POIs_100.nt\n-rw-r--r--   3 root supergroup      53298 2020-10-15 12:44 /data/EnglishFloodTweets__.txt\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1602766382959_1249499404",
      "id": "20201002-124836_1379100346",
      "dateCreated": "2020-10-15 12:53:02.959",
      "dateStarted": "2020-10-15 14:43:10.667",
      "dateFinished": "2020-10-15 14:43:12.734",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport org.apache.jena.riot.Lang\nimport com.typesafe.config.ConfigFactory\nimport net.sansa_stack.ml.spark.clustering.utils.DataProcessing\nimport net.sansa_stack.rdf.spark.io._\n\n\nval input \u003d \"/data/EOPEN_POIs_100.nt\"\nval lang \u003d Lang.NTRIPLES\n\nval triples \u003d spark.rdf(lang)(input)\n\ntriples.take(30).foreach(println)\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:43:12.768",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "scala.reflect.internal.MissingRequirementError: object java.lang.Object in compiler mirror not found.\n\tat scala.reflect.internal.MissingRequirementError$.signal(MissingRequirementError.scala:17)\n\tat scala.reflect.internal.MissingRequirementError$.notFound(MissingRequirementError.scala:18)\n\tat scala.reflect.internal.Mirrors$RootsBase.getModuleOrClass(Mirrors.scala:53)\n\tat scala.reflect.internal.Mirrors$RootsBase.getModuleOrClass(Mirrors.scala:45)\n\tat scala.reflect.internal.Mirrors$RootsBase.getModuleOrClass(Mirrors.scala:45)\n\tat scala.reflect.internal.Mirrors$RootsBase.getModuleOrClass(Mirrors.scala:66)\n\tat scala.reflect.internal.Mirrors$RootsBase.getClassByName(Mirrors.scala:102)\n\tat scala.reflect.internal.Mirrors$RootsBase.getRequiredClass(Mirrors.scala:105)\n\tat scala.reflect.internal.Definitions$DefinitionsClass.ObjectClass$lzycompute(Definitions.scala:257)\n\tat scala.reflect.internal.Definitions$DefinitionsClass.ObjectClass(Definitions.scala:257)\n\tat scala.reflect.internal.Definitions$DefinitionsClass.init(Definitions.scala:1394)\n\tat scala.tools.nsc.Global$Run.\u003cinit\u003e(Global.scala:1215)\n\tat scala.tools.nsc.interpreter.IMain.compileSourcesKeepingRun(IMain.scala:432)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compileAndSaveRun(IMain.scala:855)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compile(IMain.scala:813)\n\tat scala.tools.nsc.interpreter.IMain.bind(IMain.scala:675)\n\tat scala.tools.nsc.interpreter.IMain.bind(IMain.scala:712)\n\tat scala.tools.nsc.interpreter.IMain$$anonfun$quietBind$1.apply(IMain.scala:711)\n\tat scala.tools.nsc.interpreter.IMain$$anonfun$quietBind$1.apply(IMain.scala:711)\n\tat scala.tools.nsc.interpreter.IMain.beQuietDuring(IMain.scala:214)\n\tat scala.tools.nsc.interpreter.IMain.quietBind(IMain.scala:711)\n\tat scala.tools.nsc.interpreter.ILoop.scala$tools$nsc$interpreter$ILoop$$loopPostInit(ILoop.scala:891)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.callMethod(BaseSparkScalaInterpreter.scala:270)\n\tat org.apache.zeppelin.spark.BaseSparkScalaInterpreter.callMethod(BaseSparkScalaInterpreter.scala:262)\n\tat org.apache.zeppelin.spark.SparkScala211Interpreter.open(SparkScala211Interpreter.scala:84)\n\tat org.apache.zeppelin.spark.NewSparkInterpreter.open(NewSparkInterpreter.java:102)\n\tat org.apache.zeppelin.spark.SparkInterpreter.open(SparkInterpreter.java:62)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.open(LazyOpenInterpreter.java:69)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:617)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:140)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1602766382959_2136947631",
      "id": "20201002-121011_981424238",
      "dateCreated": "2020-10-15 12:53:02.959",
      "dateStarted": "2020-10-15 14:43:12.842",
      "dateFinished": "2020-10-15 14:43:13.572",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n%spark\nimport org.apache.spark.rdd.RDD\ncase class spatial(longitude: Double, latitude: Double)\n\ndef getPOICoordinates: RDD[(Long, spatial)] \u003d {\n    // get the coordinates of pois\n    val pattern \u003d \"POINT (.+ .+)\".r\n    val poiCoordinatesString \u003d triples.filter(x \u003d\u003e x.getPredicate.toString().equalsIgnoreCase(\"http://www.opengis.net/ont/geosparql#asWKT\"))\n    val removeRelation\u003dpoiCoordinatesString.filter(f \u003d\u003e (!f.getSubject.toString().contains(\"http://slipo.eu/id/x\")))\n      .map(x \u003d\u003e (x.getSubject.toString().replace(\"http://slipo.eu/id/poi/\", \"\").replace(\"\",\"\").replace(\"/geometry\", \"\")\n      .toLong,pattern.findFirstIn(x.getObject.toString()).head.replace(\"POINT \", \"\") \n          .replace(\"^^http://www.opengis.net/ont/geosparql#wktLiteral\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\"))) \n    //println(removeRelation.count)\n          // transform to Coordinate object\n    \n    val m\u003dremoveRelation.mapValues(x \u003d\u003e {\n        val coordinates \u003d x.replace(\"(\", \"\").replace(\")\", \"\").split(\" \")\n        spatial(coordinates(0).toDouble, coordinates(1).toDouble)\n    })\n    m\n }\nvar poiCoordinates: RDD[(Long, spatial)]\u003d getPOICoordinates.persist()\nvar poiCoordinatesfiltered \u003d triples.filter(x \u003d\u003e x.getPredicate.toString().equalsIgnoreCase(\"http://www.opengis.net/ont/geosparql#asWKT\")).map(x \u003d\u003e (x.getSubject.toString().replace(\"http://slipo.eu/id/poi/\", \"\").replace(\"\",\"\").replace(\"/geometry\", \"\")\n    .toLong, x.getObject.toString().replace(\"POINT\", \"\").replace(\"\u003chttp://www.opengis.net/def/crs/EPSG/0/4326\u003e\",\"\").replace(\"(\", \"\").replace(\")\", \"\")\n          .replace(\"^^http://www.opengis.net/ont/geosparql#wktLiteral\", \"\").replaceAll(\"^\\\"|\\\"$\", \"\")  ))\n\n\nprintln(poiCoordinatesfiltered.count)\nprintln(triples.count)\npoiCoordinatesfiltered.take(2).foreach(println)\n\n\nval POIcoordinates\u003dpoiCoordinatesfiltered.mapValues(x \u003d\u003e {\n        val coordinates \u003d x.replace(\"(\", \"\").replace(\")\", \"\").split(\" \")\n        spatial(coordinates(1).toDouble, coordinates(2).toDouble)\n        })\n        \n\nprintln(POIcoordinates.count)        \nPOIcoordinates.take(3).foreach(println)\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:14:50.237",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382959_-933860242",
      "id": "20201002-121019_733328916",
      "dateCreated": "2020-10-15 12:53:02.960",
      "dateStarted": "2020-10-15 14:14:50.280",
      "dateFinished": "2020-10-15 14:14:52.050",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\ndef getCat(): RDD[(Long, String)] \u003d {\n    val keyName\u003dtriples.filter(f\u003d\u003ef.getPredicate.toString().contains(\"http://slipo.eu/def#termValue\"))\n    val filterSub\u003dkeyName.filter(f\u003d\u003ef.getSubject.toString().contains(\"http://slipo.eu/id/poi/\"))\n    val getKV\u003d filterSub.map(x \u003d\u003e ((x.getSubject.toString().replace(\"http://slipo.eu/id/poi/\", \"\").toLong),\n        x.getObject.toString()))\n    getKV.take(2).foreach(println)\n    getKV    \n}\n\n\ncase class PoiOSM(poi_id: Long, coordinate: spatial, categories: String)\nvar categoriesOSM\u003d getCat\nvar join_e\u003dPOIcoordinates.join(categoriesOSM)\n\nval pois\u003djoin_e.map(f\u003d\u003ePoiOSM(f._1.toLong,f._2._1,f._2._2.toString))\npois.take(2).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:07:14.893",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382960_-2123634941",
      "id": "20201003-162655_270474105",
      "dateCreated": "2020-10-15 12:53:02.960",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n//case class PoiOSM(poi_id: Long, coordinate: spatial, categories: String)\n// var categoriesOSM\u003d getCat.toDF(\"id\", \"cat\")\n// var poiCoordinates_H \u003d POIcoordinates.toDF(\"id\", \"place\")\n //poiCoordinates_H.show()\n\n// println(poiCoordinates_H.count)\n// var join\u003dpoiCoordinates_H.join(categoriesOSM,poiCoordinates_H(\"id\") \u003c\u003d\u003e categoriesOSM(\"id\") )//.join(cuisne)\n// join.show()\n// val pois\u003djoin.map(f\u003d\u003ePoiOSM(join.select(col(\"id\")).,join.select(col(\"place\")), join.select(col(\"cat\")) ))\n// println(pois.count)\n// pois.show()\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 12:53:02.960",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382960_1844389752",
      "id": "20201003-155020_1841445414",
      "dateCreated": "2020-10-15 12:53:02.960",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\ncase class ClusterOSM(cluster_id: Int, poi_in_cluster: Array[PoiOSM])\ncase class ClsutersOSM(numOfClusters: Int,clusterSizes: Array[Int],clusters:Array[ClusterOSM])\nval poiCategorySet \u003d pois.map(poi \u003d\u003e (poi.categories,(poi.coordinate,poi.poi_id))).persist()\nval a\u003dpoiCategorySet.groupByKey()\nval b\u003da.zipWithIndex()\nval forJSON\u003db.map(f \u003d\u003e (f._2,(f._1._1,f._1._2.toArray)))\nval t\u003dforJSON.map(f \u003d\u003e ClusterOSM(f._1.toInt,f._2._2.map(g \u003d\u003e PoiOSM(g._2,g._1,f._2._1)))).collect()\nval assignments \u003d forJSON.collect().toList.map(f \u003d\u003e f._2._2.length).toArray\nval assm\u003dassignments.toArray\nval lenthCluster\u003dassm.length\nval finaloutputforsaving\u003d ClsutersOSM(lenthCluster,assm,t)\npoiCategorySet.take(10).foreach(println)\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:14:00.907",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382960_-160219938",
      "id": "20201002-125458_1457819758",
      "dateCreated": "2020-10-15 12:53:02.960",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nz.angularBind(\"clustersPois\", finaloutputforsaving)",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:29:24.628",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382961_571765591",
      "id": "20201002-125537_1123969626",
      "dateCreated": "2020-10-15 12:53:02.961",
      "dateStarted": "2020-10-15 14:29:24.671",
      "dateFinished": "2020-10-15 14:29:24.991",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nval c\u003db.map(f\u003d\u003e((f._2,f._1._1,f._1._2)))\nval d\u003db.map(f\u003d\u003ef._1._2.map(g\u003d\u003e(f._2,f._1._1,g._1,g._2)).toList)",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 12:53:02.961",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382961_-1619563245",
      "id": "20201002-135901_1064225599",
      "dateCreated": "2020-10-15 12:53:02.961",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport com.vividsolutions.jts.geom.{ Coordinate, Envelope, GeometryFactory, Point }\n   \nval geometryFactory \u003d new GeometryFactory()\nval dbparam\u003dd.collect.map(f \u003d\u003e f.map{g \u003d\u003e\n    val clsuterid\u003dg._1+\".\"\n    val poid\u003dg._4\n    val combineId\u003dclsuterid+poid\n    val lat\u003dg._3.latitude\n    val long\u003dg._3.longitude\n    val point \u003d geometryFactory.createPoint(new Coordinate(long, lat))\n        point.setUserData(combineId)\n        point\n    })\ndbparam.take(3).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:33:33.660",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382961_-1142779689",
      "id": "20201002-141632_572807873",
      "dateCreated": "2020-10-15 12:53:02.961",
      "dateStarted": "2020-10-15 14:33:33.700",
      "dateFinished": "2020-10-15 14:33:34.747",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nimport net.sansa_stack.ml.spark.clustering.algorithms.DBSCAN\nimport net.sansa_stack.ml.spark.clustering._\nimport scala.util.parsing.json._\nimport org.json4s.jackson.Serialization.write\nimport org.json4s._\nimport org.json4s.jackson.JsonMethods._\nimport com.vividsolutions.jts.geom.{ Coordinate, Envelope, GeometryFactory, Point }   \n\nval dbfilter\u003ddbparam.filter(f \u003d\u003e f.size \u003e 35) // NOTE: 35 takes time but if reduced it may raise a GeoSpark paritioning issue\ncase class Coordinate2(longitude: Double, latitude: Double)\ncase class Cluster2(cluster_id: String, cluster_id_kmeans:String,poi_in_cluster:  Array[Coordinate2])\ncase class Clusters1(numOfClusters: Int, clusterSizes:Array[Int], clusters: Array[Cluster2])\n    \nval broadcastRDD \u003d spark.sparkContext.broadcast(dbfilter)\n\nval convertRDD\u003dbroadcastRDD.value.map{case u \u003d\u003e spark.sparkContext.parallelize(u)}\n\nval dbscan \u003d triples.cluster(ClusteringAlgorithm.DBSCAN).asInstanceOf[DBSCAN]\n\nval k \u003d convertRDD.map(f \u003d\u003e dbscan.dbclusters(f, 0.01, 2, spark))\n    \nval clusterIDPOIidPair \u003d k.map(arr \u003d\u003e arr.map(f \u003d\u003e (f._1, f._2.map(g \u003d\u003e (g._1,g._2.lat,g._2.lon)))).groupByKey())\nval temp\u003d clusterIDPOIidPair.reduce( _ ++ _ ).repartition(5)\n\n \nval col\u003dtemp.collect().toArray\nval exp\u003dcol.map(f\u003d\u003e(f._1,f._2.map(f \u003d\u003e (f.length)).toArray)).toArray\n     \ndef subsequenceT(a:String):String \u003d {\na.substring(0,  a.indexOf(\".\"))\n\n}\n\ndef findTerm(gt: (String, Iterable[Array[(String, Double, Double)]])): Cluster2 \u003d {\n    val a\u003dgt._1\n    val c\u003dgt._2.map(f \u003d\u003e f.head).map(f \u003d\u003e f._1).head\n    val func\u003dsubsequenceT(c)\n    val b\u003dgt._2.flatMap(f \u003d\u003e f.map(f \u003d\u003e (Coordinate2(f._3,f._2))))\n    (Cluster2(a,func,b.toArray))\n}\n\nval newdata\u003dcol.map(f \u003d\u003e f._2.map(f \u003d\u003e f.length).toArray).flatMap(f \u003d\u003e f).toArray\nval poisDB\u003dClusters1(exp.size, newdata,col.map(g \u003d\u003e findTerm(g)))",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:33:38.305",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382962_1268425134",
      "id": "20201003-170131_1915505568",
      "dateCreated": "2020-10-15 12:53:02.962",
      "dateStarted": "2020-10-15 14:33:38.339",
      "dateFinished": "2020-10-15 14:33:38.637",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nprintln(poisDB)\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 12:53:02.962",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382962_806506945",
      "id": "20201003-173213_1115844896",
      "dateCreated": "2020-10-15 12:53:02.962",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\nz.angularBind(\"someScopeVar\", poisDB)",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 12:53:02.962",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382962_-16208498",
      "id": "20201003-170205_1778680175",
      "dateCreated": "2020-10-15 12:53:02.962",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%angular\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n  \u003chead\u003e\n      \u003ctitle\u003eSLIPO\u003c/title\u003e\n      \u003c!-- Convex hull library --\u003e\n    \u003clink rel\u003d\"stylesheet\" href\u003d\"//ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/themes/smoothness/jquery-ui.css\" /\u003e \n    \u003clink rel\u003d\"stylesheet\" href\u003d\"https://unpkg.com/leaflet@1.3.1/dist/leaflet.css\" integrity\u003d\"sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ\u003d\u003d\" crossorigin\u003d\"\"/\u003e\n    \u003cscript src\u003d\"https://unpkg.com/leaflet@1.3.1/dist/leaflet.js\" integrity\u003d\"sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw\u003d\u003d\" crossorigin\u003d\"\"\u003e\u003c/script\u003e\n\n      \u003clink rel\u003d\"stylesheet\" href\u003d\"https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css\"\u003e  \n        \n    \n     \u003c!--  \u003cscript src\u003d\"https://fastcdn.org/Leaflet.awesome-markers/2.0.1/leaflet.awesome-markers.js\"\u003e\u003c/script\u003e --\u003e\n   \u003cscript\u003e\n      \n      /*\n       Leaflet.AwesomeMarkers, a plugin that adds colorful iconic markers for Leaflet, based on the Font Awesome icons\n       (c) 2012-2013, Lennard Voogdt\n\n      http://leafletjs.com\n      https://github.com/lvoogdt\n     */\n\n     /*global L*/\n\n(function (window, document, undefined) {\n    \"use strict\";\n    /*\n     * Leaflet.AwesomeMarkers assumes that you have already included the Leaflet library.\n     */\n\n    L.AwesomeMarkers \u003d {};\n\n    L.AwesomeMarkers.version \u003d \u00272.0.1\u0027;\n\n    L.AwesomeMarkers.Icon \u003d L.Icon.extend({\n        options: {\n            iconSize: [35, 45],\n            iconAnchor:   [17, 42],\n            popupAnchor: [1, -32],\n            shadowAnchor: [10, 12],\n            shadowSize: [36, 16],\n            className: \u0027awesome-marker\u0027,\n            prefix: \u0027glyphicon\u0027,\n            spinClass: \u0027fa-spin\u0027,\n            extraClasses: \u0027\u0027,\n            icon: \u0027home\u0027,\n            markerColor: \u0027blue\u0027,\n            iconColor: \u0027white\u0027\n        },\n\n        initialize: function (options) {\n            options \u003d L.Util.setOptions(this, options);\n        },\n\n        createIcon: function () {\n            var div \u003d document.createElement(\u0027div\u0027),\n                options \u003d this.options;\n\n            if (options.icon) {\n                div.innerHTML \u003d this._createInner();\n            }\n\n            if (options.bgPos) {\n                div.style.backgroundPosition \u003d\n                    (-options.bgPos.x) + \u0027px \u0027 + (-options.bgPos.y) + \u0027px\u0027;\n            }\n\n            this._setIconStyles(div, \u0027icon-\u0027 + options.markerColor);\n            return div;\n        },\n\n        _createInner: function() {\n            var iconClass, iconSpinClass \u003d \"\", iconColorClass \u003d \"\", iconColorStyle \u003d \"\", options \u003d this.options;\n\n            if(options.icon.slice(0,options.prefix.length+1) \u003d\u003d\u003d options.prefix + \"-\") {\n                iconClass \u003d options.icon;\n            } else {\n                iconClass \u003d options.prefix + \"-\" + options.icon;\n            }\n\n            if(options.spin \u0026\u0026 typeof options.spinClass \u003d\u003d\u003d \"string\") {\n                iconSpinClass \u003d options.spinClass;\n            }\n\n            if(options.iconColor) {\n                if(options.iconColor \u003d\u003d\u003d \u0027white\u0027 || options.iconColor \u003d\u003d\u003d \u0027black\u0027) {\n                    iconColorClass \u003d \"icon-\" + options.iconColor;\n                } else {\n                    iconColorStyle \u003d \"style\u003d\u0027color: \" + options.iconColor + \"\u0027 \";\n                }\n            }\n\n            return \"\u003ci \" + iconColorStyle + \"class\u003d\u0027\" + options.extraClasses + \" \" + options.prefix + \" \" + iconClass + \" \" + iconSpinClass + \" \" + iconColorClass + \"\u0027\u003e\u003c/i\u003e\";\n        },\n\n        _setIconStyles: function (img, name) {\n            var options \u003d this.options,\n                size \u003d L.point(options[name \u003d\u003d\u003d \u0027shadow\u0027 ? \u0027shadowSize\u0027 : \u0027iconSize\u0027]),\n                anchor;\n\n            if (name \u003d\u003d\u003d \u0027shadow\u0027) {\n                anchor \u003d L.point(options.shadowAnchor || options.iconAnchor);\n            } else {\n                anchor \u003d L.point(options.iconAnchor);\n            }\n\n            if (!anchor \u0026\u0026 size) {\n                anchor \u003d size.divideBy(2, true);\n            }\n\n            img.className \u003d \u0027awesome-marker-\u0027 + name + \u0027 \u0027 + options.className;\n\n            if (anchor) {\n                img.style.marginLeft \u003d (-anchor.x) + \u0027px\u0027;\n                img.style.marginTop  \u003d (-anchor.y) + \u0027px\u0027;\n            }\n\n            if (size) {\n                img.style.width  \u003d size.x + \u0027px\u0027;\n                img.style.height \u003d size.y + \u0027px\u0027;\n            }\n        },\n\n        createShadow: function () {\n            var div \u003d document.createElement(\u0027div\u0027);\n\n            this._setIconStyles(div, \u0027shadow\u0027);\n            return div;\n      }\n    });\n        \n    L.AwesomeMarkers.icon \u003d function (options) {\n        return new L.AwesomeMarkers.Icon(options);\n    };\n\n}(this, document));\n\n\n\u003c/script\u003e \n\n     \u003cscript src\u003d\"http://cdn.jsdelivr.net/gh/Rajjat/FrontEND/resources/hull.js\"\u003e\u003c/script\u003e\n  \n          \n  \u003c/head\u003e\n  \u003cbody\u003e\n     \u003cdiv id\u003d\"someId1\"\u003e\u003c/div\u003e\n     \u003cdiv id\u003d\"someId\"\u003e\u003c/div\u003e\n     \u003cdiv id\u003d\"demo\"\u003e\n     \u003ccenter\u003e\n\t \u003cdiv id\u003d\"mapid\" style\u003d\"width: 130%; height: 800px;\"\u003e\u003c/div\u003e\n     \u003c/center\u003e\n     \n     \u003cscript\u003e\n      \n      //var mymap \u003d L.map(\u0027mapid\u0027).setView([51.3,6.6], 11);\n      var mymap \u003d L.map(\u0027mapid\u0027).setView([52.961451, 8.320366], 11);\n\t\n      L.tileLayer(\u0027https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token\u003dpk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw\u0027, {\n      maxZoom: 18,\n      attribution: \u0027Map data \u0026copy; \u003ca href\u003d\"http://openstreetmap.org\"\u003eOpenStreetMap\u003c/a\u003e contributors, \u0027 +\n      \u0027\u003ca href\u003d\"http://creativecommons.org/licenses/by-sa/2.0/\"\u003eCC-BY-SA\u003c/a\u003e, \u0027 +\n      \u0027Imagery © \u003ca href\u003d\"http://mapbox.com\"\u003eMapbox\u003c/a\u003e\u0027,\n      id: \u0027mapbox.streets\u0027\n      }).addTo(mymap);\n\n      \n      var colorMarker \u003d [];\n      colorMarker[0] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027red\u0027});\n      colorMarker[1] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027green\u0027});\n      colorMarker[2] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkred\u0027});\n      colorMarker[3] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027orange\u0027});\n      colorMarker[4] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkgreen\u0027});\n      colorMarker[5] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027blue\u0027});\n      colorMarker[6] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027purple\u0027});\n      colorMarker[7] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkpurple\u0027});\n      colorMarker[8] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n      colorMarker[9] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027darkblue\u0027});\n      // colorMarker[10] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n      // colorMarker[11] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n      // colorMarker[12] \u003d L.AwesomeMarkers.icon({icon: \u0027\u0027,markerColor: \u0027cadetblue\u0027});\n\n      var colorHull \u003d [];\n      colorHull[0] \u003d \u0027#e84c38\u0027 ;\n      colorHull[1] \u003d \u0027#93c827\u0027 ;\n      colorHull[2] \u003d \u0027#b54347\u0027 ;\n      colorHull[3] \u003d \u0027#f89b31\u0027 ;\n      colorHull[4] \u003d \u0027#919625\u0027 ;\n      colorHull[5] \u003d \u0027#3db2e5\u0027 ;\n      colorHull[6] \u003d \u0027#d759bb\u0027 ;\n      colorHull[7] \u003d \u0027#5e3c6f\u0027 ;\n      colorHull[8] \u003d \u0027#4e7080\u0027 ;\n      colorHull[9] \u003d \u0027#0066a4\u0027 ;\n      \n\n    \n      \n      \n      var element1 \u003d $(\u0027#someId1\u0027);\n      var angularVar1 \u003d \u0027clustersPois\u0027;\n      var scope1 \u003d angular.element(element1.parent(\u0027.ng-scope\u0027)).scope().compiledScope;\n      window.watcher \u003d scope1.$watch(angularVar1, function(newVal1, oldVal1){\n      var jsonE1 \u003d JSON.stringify(newVal1);\n      var data1 \u003d JSON.parse(jsonE1);\n      console.log(\"lat\u003d\"+data1.clusters[1].poi_in_cluster[0].coordinate.latitude);\n      console.log(\"long\u003d\"+data1.clusters[1].poi_in_cluster[0].coordinate.longitude);\n      for (i\u003d0;i\u003c10;i++){\n\t   for (j\u003d0;j\u003cdata1.clusterSizes[i];j++){\n\t        L.marker([data1.clusters[i].poi_in_cluster[j].coordinate.latitude,data1.clusters[i].poi_in_cluster[j].coordinate.longitude], {icon: colorMarker[data1.clusters[i].cluster_id]}).addTo(mymap).bindPopup(data1.clusters[i].poi_in_cluster[j].categories.toString());\n        }\n      }\n     });\n     \n     \n     var element \u003d $(\u0027#someId\u0027);\n     var angularVar \u003d \u0027someScopeVar\u0027;\n     var scope \u003d angular.element(element.parent(\u0027.ng-scope\u0027)).scope().compiledScope;\n     window.watcher \u003d scope.$watch(angularVar, function(newVal, oldVal){\n     var jsonE \u003d JSON.stringify(newVal);\n     var data \u003d JSON.parse(jsonE);\n     \n      for (i\u003d0;i\u003cdata.numOfClusters;i++){\n        var poly \u003d [];\n\t  for (j\u003d0;j\u003cdata.clusterSizes[i];j++){\n\t\t\t\tpoly[j]\u003d[];\n\t\t\t\tpoly[j] \u003d [ data.clusters[i].poi_in_cluster[j].latitude , data.clusters[i].poi_in_cluster[j].longitude ] ; // reversed\n\t\t\t\t}\n\t\t    L.polygon(hull(poly,10)).setStyle({fillColor: colorHull[data.clusters[i].cluster_id_kmeans] , color: colorHull[data.clusters[i].cluster_id_kmeans]}).addTo(mymap) ;\n     }\n});\n     \n     \n  \n     \n    \u003c/script\u003e\n  \u003c/body\u003e\n\n\u003c/html\u003e",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 14:28:07.405",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382962_-1432686932",
      "id": "20201003-170254_2109386096",
      "dateCreated": "2020-10-15 12:53:02.962",
      "dateStarted": "2020-10-15 14:28:07.404",
      "dateFinished": "2020-10-15 14:28:07.422",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n",
      "user": "anonymous",
      "dateUpdated": "2020-10-15 12:53:02.963",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1602766382963_319805895",
      "id": "20201003-170343_1411404257",
      "dateCreated": "2020-10-15 12:53:02.963",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "hackatron",
  "id": "2FMU3UBDK",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "python:shared_process": [],
    "angular:shared_process": [],
    "sh:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}